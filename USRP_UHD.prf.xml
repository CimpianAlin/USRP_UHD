<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
<properties>
  <simple id="DCE:cdc5ee18-7ceb-4ae6-bf4c-31f983179b4d" mode="readonly" name="device_kind" type="string">
    <description>This specifies the device kind</description>
    <value>FRONTEND::TUNER</value>
    <kind kindtype="configure"/>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <simple id="DCE:0f99b2e4-9903-4631-9846-ff349d18ecfb" mode="readonly" name="device_model" type="string">
    <description> This specifies the specific device</description>
    <value>USRP</value>
    <kind kindtype="configure"/>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <structsequence id="FRONTEND::tuner_status" mode="readonly" name="frontend_tuner_status">
    <description>Status of each tuner, including entries for both allocated and un-allocated tuners. Each entry represents a single tuner.</description>
    <struct id="FRONTEND::tuner_status_struct" name="frontend_tuner_status_struct">
      <simple id="FRONTEND::tuner_status::allocation_id_csv" name="allocation_id_csv" type="string">
        <description>Comma separated list of current Allocation IDs.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::available_bandwidth" name="available_bandwidth" type="string">
        <description>Available bandwidth (Hz) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::available_frequency" name="available_frequency" type="string">
        <description>Available frequencies (Hz) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::available_gain" name="available_gain" type="string">
        <description>Available gain (dB) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>dB</units>
      </simple>
      <simple id="FRONTEND::tuner_status::available_sample_rate" name="available_sample_rate" type="string">
        <description>Available sample_rate (sps) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>sps</units>
      </simple>
      <simple id="FRONTEND::tuner_status::bandwidth" name="bandwidth" type="double">
        <description>Current bandwidth in Hz</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::bandwidth_tolerance" name="bandwidth_tolerance" type="double">
        <description>Allowable percentage over requested bandwidth. This value is provided by the requester during allocation.</description>
        <units>%</units>
      </simple>
      <simple id="FRONTEND::tuner_status::center_frequency" name="center_frequency" type="double">
        <description>Current center frequency in Hz.</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::complex" name="complex" type="boolean">
        <description>Indicates if the output data is complex.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::enabled" name="enabled" type="boolean">
        <description>Indicates if tuner is enabled, in reference to the output state of the tuner.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::gain" name="gain" type="double">
        <description>Current gain in dB.</description>
        <units>dB</units>
      </simple>
      <simple id="FRONTEND::tuner_status::group_id" name="group_id" type="string">
        <description>Unique ID that specifies a group of Device.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::reference_source" name="reference_source" type="long">
        <description>Indicates internal (0) vs external (1) reference source.</description>
        <enumerations>
          <enumeration label="INTERNAL" value="0"/>
          <enumeration label="EXTERNAL" value="1"/>
        </enumerations>
      </simple>
      <simple id="FRONTEND::tuner_status::rf_flow_id" name="rf_flow_id" type="string">
        <description>Specifies a certain RF flow to allocate against.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::sample_rate" name="sample_rate" type="double">
        <description>Current sample rate in samples per second.</description>
        <units>sps</units>
      </simple>
      <simple id="FRONTEND::tuner_status::sample_rate_tolerance" name="sample_rate_tolerance" type="double">
        <description>Allowable percentage over requested sample rate. This value is provided by the requester during allocation.</description>
        <units>%</units>
      </simple>
      <simple id="FRONTEND::tuner_status::tuner_number" name="tuner_number" type="short">
        <description>Physical tuner ID.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::tuner_type" name="tuner_type" type="string">
        <description>Example Tuner Types: TX, RX, CHANNELIZER, DDC, RX_DIGITIZER, RX_DIGTIZIER_CHANNELIZER</description>
      </simple>
      <simple id="FRONTEND::tuner_status::valid" name="valid" type="boolean">
        <description>Indicates if the tuner is in a valid state. For DDCs, false indicates the attached CHANNELIZER has moved such that the DDC can no longer tune to the appropriate frequency.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::stream_id" name="stream_id" type="string">
        <description>Stream ID associated with tuner/allocation</description>
      </simple>
    </struct>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <struct id="FRONTEND::listener_allocation" name="frontend_listener_allocation">
    <description>Allocates a listener (subscriber) based off a previous allocation </description>
    <simple id="FRONTEND::listener_allocation::existing_allocation_id" name="existing_allocation_id" type="string">
      <description></description>
    </simple>
    <simple id="FRONTEND::listener_allocation::listener_allocation_id" name="listener_allocation_id" type="string">
      <description></description>
    </simple>
    <configurationkind kindtype="allocation"/>
  </struct>
  <struct id="FRONTEND::tuner_allocation" name="frontend_tuner_allocation">
    <description>Frontend Interfaces v2.0 main allocation structure</description>
    <simple id="FRONTEND::tuner_allocation::tuner_type" name="tuner_type" type="string">
      <description>Example Tuner Types: TX, RX, CHANNELIZER, DDC, RX_DIGITIZER, RX_DIGTIZIER_CHANNELIZER</description>
    </simple>
    <simple id="FRONTEND::tuner_allocation::allocation_id" name="allocation_id" type="string">
      <description>The allocation_id set by the caller. Used by the caller to reference the device uniquely</description>
    </simple>
    <simple id="FRONTEND::tuner_allocation::center_frequency" name="center_frequency" type="double">
      <description>Requested center frequency.</description>
      <value>0.0</value>
      <units>Hz</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::bandwidth" name="bandwidth" type="double">
      <description>Requested Bandwidth</description>
      <value>0.0</value>
      <units>Hz</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::bandwidth_tolerance" name="bandwidth_tolerance" type="double">
      <description>Allowable Percent above requested bandwidth  (ie - 100 would be up to twice)</description>
      <value>10.0</value>
      <units>percent</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::sample_rate" name="sample_rate" type="double">
      <description>Requested sample rate. This can be ignored for such devices as analog tuners</description>
      <value>0.0</value>
      <units>sps</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::sample_rate_tolerance" name="sample_rate_tolerance" type="double">
      <description>Allowable Percent above requested sample rate (ie - 100 would be up to twice)</description>
      <value>10.0</value>
      <units>percent</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::device_control" name="device_control" type="boolean">
      <description>True: Has control over the device to make changes
False: Does not need control and can just attach to any currently tasked device that satisfies the parameters (essentually a listener)</description>
      <value>true</value>
    </simple>
    <simple id="FRONTEND::tuner_allocation::group_id" name="group_id" type="string">
      <description>Unique identifier that specifies a group of device. Must match group_id on the device</description>
    </simple>
    <simple id="FRONTEND::tuner_allocation::rf_flow_id" name="rf_flow_id" type="string">
      <description>Optional. Specifies a certain RF flow to allocate against. If left empty, it will match all frontend devices.</description>
    </simple>
    <configurationkind kindtype="allocation"/>
  </struct>
  <structsequence id="connectionTable">
    <struct id="connectionTable::connection_descriptor" name="connection_descriptor">
      <simple id="connectionTable::connection_id" name="connection_id" type="string">
        <kind kindtype="configure"/>
      </simple>
      <simple id="connectionTable::stream_id" name="stream_id" type="string">
        <kind kindtype="configure"/>
      </simple>
      <simple id="connectionTable::port_name" name="port_name" type="string">
        <kind kindtype="configure"/>
      </simple>
    </struct>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <structsequence id="available_devices" mode="readonly" name="available_devices">
    <description>Lists all USRPS found on the network (updated by setting update_available_devices property to true)</description>
    <struct id="available_devices::usrp_device" mode="readonly" name="usrp_device">
      <simple id="available_devices::type" mode="readonly" name="type" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="available_devices::ip_address" mode="readonly" name="ip_address" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="available_devices::name" mode="readonly" name="name" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="available_devices::serial" mode="readonly" name="serial" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <configurationkind kindtype="configure"/>
    </struct>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <simple id="update_available_devices" mode="readwrite" name="update_available_devices" type="boolean">
    <description>When set to true, the available_usrp_devices property will be updated with all available usrps found on the network. Similar output to the uhd_find_devices command</description>
    <value>False</value>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="device_ip_address" mode="readwrite" name="device_ip_address" type="string">
    <description>IP address of the USRP </description>
    <kind kindtype="configure"/>
    <kind kindtype="execparam"/>
    <action type="external"/>
  </simple>
  <simple id="device_reference_source_global" mode="readwrite" name="device_reference_source_global" type="string">
    <value>INTERNAL</value>
    <enumerations>
      <enumeration label="INTERNAL" value="INTERNAL"/>
      <enumeration label="EXTERNAL" value="EXTERNAL"/>
      <enumeration label="MIMO" value="MIMO"/>
    </enumerations>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="device_rx_gain_global" mode="readwrite" name="device_rx_gain_global" type="float">
    <description>Global RX_DIGITIZER gain value</description>
    <value>0</value>
    <units>dB</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="device_tx_gain_global" mode="readwrite" name="device_tx_gain_global" type="float">
    <description>Global TX gain value</description>
    <value>0</value>
    <units>dB</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="device_group_id_global" mode="readwrite" name="device_group_id_global" type="string">
    <description>Any allocations requested on this device must have a matching group_id field (ie - the group_id value defined in the allocation structure must match the group_id for the device). These values default to an empty string and therefore match by default.  
Please see the Frontend Interfaces v2.0 documentation for a full description. </description>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <structsequence id="device_channels" mode="readonly" name="device_channels">
    <description>Describes the daughtercards and channels found in the USRP</description>
    <struct id="channels::usrp_channel" mode="readonly" name="usrp_channel">
      <simple id="device_channels::ch_name" mode="readonly" name="ch_name" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::tuner_type" mode="readonly" name="tuner_type" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::chan_num" mode="writeonly" name="chan_num" type="short">
        <description>This is the per tuner type channel number. This means that there could be a tuner 0 for an RX and a tuner 0 for a TX.</description>
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::antenna" mode="readonly" name="antenna" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::bandwidth_current" mode="readonly" name="bandwidth_current" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::bandwidth_min" mode="readwrite" name="bandwidth_min" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::bandwidth_max" mode="readwrite" name="bandwidth_max" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::rate_current" mode="readonly" name="rate_current" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::rate_min" mode="readonly" name="rate_min" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::rate_max" mode="readonly" name="rate_max" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::freq_current" mode="readonly" name="freq_current" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::freq_min" mode="readonly" name="freq_min" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::freq_max" mode="readonly" name="freq_max" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::gain_current" mode="readonly" name="gain_current" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::gain_min" mode="readonly" name="gain_min" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::gain_max" mode="readonly" name="gain_max" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::clock_min" mode="readwrite" name="clock_min" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_channels::clock_max" mode="readwrite" name="clock_max" type="double">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <configurationkind kindtype="configure"/>
    </struct>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <structsequence id="device_motherboards" mode="readonly" name="device_motherboards">
    <struct id="motherboards::usrp_motherboard" mode="readonly" name="usrp_motherboard">
      <simple id="device_motherboards::mb_name" mode="readonly" name="mb_name" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <simple id="device_motherboards::mb_ip" mode="readonly" name="mb_ip" type="string">
        <kind kindtype="configure"/>
        <action type="external"/>
      </simple>
      <configurationkind kindtype="configure"/>
    </struct>
    <configurationkind kindtype="configure"/>
  </structsequence>
  <simple id="device_rx_mode" mode="readwrite" name="device_rx_mode" type="string">
    <value>16bit</value>
    <enumerations>
      <enumeration label="16bit" value="16bit"/>
      <enumeration label="8bit" value="8bit"/>
    </enumerations>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="device_tx_mode" mode="readwrite" name="device_tx_mode" type="string">
    <value>16bit</value>
    <enumerations>
      <enumeration label="16bit" value="16bit"/>
      <enumeration label="8bit" value="8bit"/>
    </enumerations>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
</properties>
